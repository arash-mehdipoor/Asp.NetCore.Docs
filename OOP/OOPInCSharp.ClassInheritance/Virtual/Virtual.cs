namespace OOPInCSharp.ClassInheritance.Virtual
{
    #region Description
    /// <summary>
    /// فرزندها  میتونن یک ویژگی رو که توی کلاس پدر وجود داره برای خودشون اختصاصی سازی بکنند
    /// و اونجوری که میخوان ارائش بکنند
    /// این حالت در سی شارپ به کمک کلمه کلیدی 
    /// Virtual
    ///  ایجاد میشه، حالا وقتی یک کلاسی از یک پرنتی ارث میبره با استفاده از کلمه کلیدی 
    ///  override میتونه این متد رو برای خودش اختصاصی سازی بکنه
    ///  پیاده سازی پولیمورفیسم به همین روش انجام میشه در سیستم ما
    ///  و تصمیم گیری اینکه کدوم متد باید اجرا بشه واگذاری میشه به زمان اجرا
    ///  و زمان ران تایم سیستم بررسی میکنه میبینه کدوم کلاس داره اجرا میشه و میره سراغ متد اون
    ///  این با استفاد از Virtual Table انجام میشه
    ///  توضیح Virtual Table
    ///  شما یک کلاس پرنت داری و یکسری چایلد هم داری و ازش ارث بری کردن
    ///  توی این VTable
    ///  میاد میخونه که هر کلاسی کدوم متد پیاده سازی اون متد ویرچوالش هستش
    ///  به این نکته توجه کنید که ویرچوال قرار دادن سربار داره و اگر واقعا میبینید نیازه استفاده کنید
    /// </summary> 
    #endregion

    #region Virtual
    public class Animal
    {
        public virtual string Voice() => "voice in Animal";
    }

    public class Dog : Animal
    {
        public override string Voice() => "Hup";
    }
    /// <summary>
    /// بصورت پیشفرض هنگام صدا زدن و استفاده از متد ویس مقدار پدر و مقدار تابع ویس داخل کلاس هم بازگشت داده می شود
    /// </summary>
    public class Cat : Animal
    {
        public override string Voice()
        {
            base.Voice();
            return "Mio";
        }
    }
    /// <summary>
    /// بصورت پیشفرض هنگام صدا زدن و استفاده از متد ویس مقدار پدر بازگشت داده می شود
    /// </summary>
    public class Cow : Animal
    {

    } 
    #endregion
}
