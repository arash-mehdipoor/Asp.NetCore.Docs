namespace CSharpTypes.Classes.Constructor
{
    #region Description
    /// <summary>
    /// سازنده یک متد ویژه است مثل متدهای دیگه ،یک متد از متدهای کلاس است
    /// ویزگی هاش :
    /// 1- اسمش همنام اسم کلاس است 
    /// 2- مقدار بازگشتی ندارد
    /// 3- خود بستر ما وقتی که نمونه سازی میشه از روی کلاس صداش میزنه
    /// شما مجبور نیستید که حتما برای کلاستون متد سازنده تعریف بکنید
    /// در این شرایط پشت صحنه یک 
    /// default Cunstructors تعریف میشه
    /// کارش اینه که هنگام نمونه سازی میاد برای پراپرتی ها و فیلدها مقداردهی اولیه انجام میده
    /// بسته به دیتاتایپتون مقدار پیشفرض میده مثلا اگر فیلد اینتیجر داشته باشید
    /// مقدارش رو ست میکنه صفر
    /// کانستراکتور ها میتونن سطح دسترسی هم داشته باشند
    /// private protected...
    /// نکته بعدی اینکه اگر یک کانستراکتور تعریف بکنید دیگه هیچوقت دیفالت کانستراکتور
    /// ایجاد نمیشه میتونید چندین کانستراکتور داشته باشید مقل مثل متدها متد اورلودینگ اتفاق میوفته
    /// استاتیک کانسراکتور هم  میتونید داشته باشید
    /// کانستراکتور ها میتونن همدیگر رو هم صدا بزنند
    /// </summary> 
    #endregion
    public class Constructor
    {
        #region Property
        private readonly int _age;
        private static int Counter;
        #endregion 
        #region Cunstructors
        public Constructor() : this(28)
        {

        }
        public Constructor(int age)
        {
            _age = age;
        }
        #endregion
        #region StaticCunstructor
        /// <summary>
        /// استاتیک کانستراکتورها برای اینکه فیلدها پراپرتی ها و... استاتیک، رو بخواهیم بصورت پیشفرض مقداردهی کنیم
        /// از Static Cunstructor
        /// استفاده میکنیم
        /// زمان اجرای این کانستراکتور ها مشخص نیست اما حتما یکبار و قبل از صدا زدن هرکدوم از فیلدها و پراپرتی ها صدا
        /// زده میشوند
        /// </summary>
        static Constructor()
        {
            Counter = 100;
        }
        #endregion
    }
}
