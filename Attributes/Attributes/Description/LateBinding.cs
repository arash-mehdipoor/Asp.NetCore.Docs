namespace Attributes.UI.Description;
#region Description
/// <summary>
/// لیت بایندیگ و ارلی بایندیگ دوتا مفهومن که باید باهاشون آشنا باشم،
/// Early Binding :
/// وقتی که شما در حال کد نویسی هستین در حال توسعه نرم افزار هستین و با یک تایپی سرو کار دارین وقبل از اینکه پروژتون رو کامپایل بکنید به اطلاعات اون تایپ کاملا دسترسی دارید
/// مثلا داریم کد مینویسیم میخوایم یه کاری انجام بدیم یک رفرنس میدیم به یک پروژه ی دیگمون و یک پکیج نوگت رو نصب میکنیم وقتی اینکاراو میکنیم عملا داریم یک رفرنسی میدیم به یک دی ال الی
/// و یک اسمبلی دیگه ای رو وارد برنامه جاری خودمون میکنیم و توی اسمبلی جدید که خودمون داریم دولوپ مکنیم دسترسی پیدا میکنیم به یک اسمبلی دیگه،تو این شرایط وقتی ما یک اسمبلی رو وارد برنامه خودمون میکنیم
/// به اطلاعاتش بصورت کامل دسترسی داریم یعنی میدونیم چه تایپهایی داره تایپهاش چه ممبرهایی داره، چجوری میتونیم از تایپ اینستنس بسازیم،چجوری ممبرهاشو میتونیم دسترسی میتونیم پیدا بکنیم
/// متدش چه ورودی هایی داره چه خروجی هایی داره و اگر اشتباهی انجام بدیم کامپایلر متوجه میشه و به ما خطای کامپایل میده به این حالت ما اصلاحا میگیم اری بایندینگ
/// Late Binding: 
/// من در زمان توسعه هیچ تصوری از نوع مورد استفاده خودم ندارم ،دقیق میدونم ولی تو کدم هیچی نمیدونم،مثلا من فرض میکنم تایپی دارم به اسم پرسن ،فرض میکنم که متدی به اسم فول نیم داره
/// اینا همه فرضیات منه و همشو بصورت استرینگ به کدم معرفی میکنم،من با کلاسی که فرض میکنم وجود داره اینستنس سازی میکنم متدی که فرض میکنم وجود داره
/// صدا میزنم ،پراپرتی هایی که فرض میکنم وجود داره مقدار میدم،و کامپایل هم که میکنم کار میکنه و خطا نمیده،
/// من میتونم برم سراغ اون قسمتی از اپلیکیشنم که با فرضیات دولوپش کردم،حالا یا در زمان ران تایم فرضیاتم درسته،یا وجود نداره،تواین حالت اگه لود کرده باشه و همه چی وجود داشته باشه که برنامه بدرستی کار میکنه،و اگر لود نکرده باشه
/// و وجود نداشته باشه برنامم در زمان ران تایم اون قسمتش به مشکل میخوره تو اینصورت میتونیم بگیم لیت بایندینگ انجام دادیم
/// بصورت کلی نباید روش اصلی ما باشه،چون بهرحال توی ارلی بایندیگ ما پرفورمنس بهتری میگیریم چون پردازش های بیخودی برای کشف تایپ نداریم در زمان ران تایم،و هم زمان کامپایل تایم خطاهای ما بیرون میزنه
/// ولی بهرحال لیت بایندینگ هم خیلی جاها به ما کمک میکنه،مثلا شما اگر برنامه های توسعه پذیر بخواید دولوپ بکنید،اینجوری که بتونید یک بخشی از برنامه رو تو ران تایم لود بکنید واستفاده بکنید تو این شرایط لیت باندینگ میتونه خیلی به شما کمک بکنه
/// </summary> 
#endregion
public class LateBinding
{

}

