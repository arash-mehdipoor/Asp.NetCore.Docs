namespace TypeCasting
{
    public class TypeCasting
    {
        #region ImplicitCasting
        #region Description
        /// <summary>
        /// یعنی ضمنی انجام میشه لزومی  نداره که ما صراحت داشته باشیم خودش انجام میشه
        /// تبدیل شدن ضمنی زمانی اتفاق میوفته که بستر دات نت مطمئن باشه که اطلاعاتی از دست نمیره
        /// اگه اطمینان حاصل کنه که با تبدیل کردن انواع دیتایی از دست نمیره تبدیل کردن رو بصورت
        /// ضمنی میپذیره و خودش انجام میده ،زمانایی که میخواید یک دیتا تایپ کوچکتر رو توی دیتا تایپ بزرگتر بریزید
        ///  بایت رو بریزید توی اینتیجر، با انتیجر رو بریزید توی دبل اتفاقی نمیوفته
        ///  چه زمانایی نمیتونیم اینکار رو انجام بدیم زمانایی که احتمال داره دیتا رو از دست بدیم
        ///  پس اگر از نوع کوچیکتر بخواهیم به نوع بزرگتر بریم مشکلی پیش نمیاد
        /// </summary> 
        #endregion
        public void ImplicitCasting()
        {
            byte a = 1;
            byte b = 2;
            int c = 10;

            int d = a;
            double e = c;
        }
        #endregion

        #region ExplecitConversion
        #region Description
        /// <summary>
        /// یه زمانایی هست که اگر یک تایپی رو به یک تایپ دیگر تبدیل بکنیم دیتا از دست ممکنه بره یعنی من یک متغیر از نوع اینتیجر دارم میخوام بریزمش توی بایت
        /// اگر تا 255 باشه اتفاقی نمیوفته و 256 به بعد حالتهایی هستش که من دیتا از دست میدم
        /// یا مثلا شاری هستش میریزمش تو یک اینتیجری،قسمت اعضاریش رو قطعا از دست میدم
        /// یا ناله میخوام بریزمش توی یک متغیر عادی
        /// برای اکسپلیسیت ما تایپی که میخوایم بهش تبدیل بشه رو داخل پرانتز مینویسیم
        /// </summary>
        #endregion
        public void ExplecitConversion()
        {
            int a = 100;
            // اینجا به وضوح بهش میگم که من میخوام این تبدیل انجام بشه حتی به قیمت از دست دادن دیتا
            byte b = (byte)a;
        }
        #endregion
    }
}
